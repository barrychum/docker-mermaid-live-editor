name: test001

on:
  push:
    branches:
      - main
    paths:
      - '/Dockerfile'
      # - '.github/workflows/test001.yml'
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ${{ vars.IMAGE_NAME }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Build Tag
    #  id: vars
    # schedule push / use TIMESTAMP as tag
    # workflow_dispatch / use Action variable as tag
    # release / use github.ref_name (tag) as tag
    # if you need to pass variables between steps, use $GITHUB_ENV
      run: |
        TIMESTAMP=$(date +'%Y%m%d%H%M%S')
        TAG=$TIMESTAMP
        if [ "${{ github.event_name }}" = "release" ]; then
          TAG="${{ github.ref_name }}"
        fi
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          TAG="${{ vars.TAG }}"
        fi
        echo "TAG=$TAG" >> $GITHUB_ENV

    - name: Display Tag for Confirmation
      # if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        echo "Using tag: $TAG"

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker buildx create --name mybuilder --use
        docker buildx inspect --bootstrap

    - name: Build and push Docker image for multiple architectures
      run: |
        docker buildx build --platform linux/amd64,linux/arm64 -t ${{ env.IMAGE_NAME }}:${{ env.TAG }} --push .

    - name: Get image digest
      run: |
        DIGEST=$(docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ env.TAG }} | grep -m 1 "Digest:" | awk '{ print $2 }')
        echo "DIGEST=$DIGEST" >> $GITHUB_ENV

    - name: Push Docker image with latest tag
      run: |
        docker buildx build --platform linux/amd64,linux/arm64 -t ${{ env.IMAGE_NAME }}:latest --push .

    - name: Save Dockerfile and tag information to JSON
      run: |
        echo "{\"image_name\": \"${{ env.IMAGE_NAME }}\", \"tag\": \"${{ env.TAG }}\", \"digest\": \"${{ env.DIGEST }}\"}" > dev-build-info.json

    - name: Upload build info as artifact
      uses: actions/upload-artifact@v4
      with:
        name: dev-build-info
        path: dev-build-info.json
